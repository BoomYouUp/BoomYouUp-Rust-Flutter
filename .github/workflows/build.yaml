name: Build

on:
  pull_request:
  push:
    branches:
      - main


permissions:
  pages: write
  id-token: write
concurrency:
  group: pages
  cancel-in-progress: true

jobs:
  build:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: Android
            os: ubuntu-latest
            command: flutter build apk --split-per-abi
            output: build/app/outputs/flutter-apk/
          - platform: Linux
            os: ubuntu-latest
            command: flutter build linux
            output: build/linux/x64/release/bundle/
          - platform: Windows
            os: windows-latest
            command: flutter build windows
            output: build/windows/runner/Release/
          - platform: Web
            os: ubuntu-latest
            command: flutter build web
            output: build/web/

    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Rust cache
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: native
          shared-key: ${{ matrix.platform }}

      - if: matrix.platform == 'Android'
        name: Setup Android cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            ~/.android/build-cache
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Setup Flutter with cache
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          cache: true

      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - if: matrix.os == 'ubuntu-latest'
        name: Setup apt
        run: |
          sudo apt-get update
          sudo apt-get upgrade

      - name: Install common dependencies
        run: |
          flutter pub get
          cargo install flutter_rust_bridge_codegen

      - if: matrix.platform == 'Android'
        name: Setup JDK
        uses: actions/setup-java@v2
        with:
          java-version: 17
          distribution: adopt

      - if: matrix.platform == 'Android'
        name: Setup Android SDK
        uses: android-actions/setup-android@v2

      - if: matrix.platform == 'Android'
        name: Configure Android Signing
        run: |
          cd android
          echo ${{ secrets.KEY }} | base64 --decode > key.jks
          echo ${{ secrets.PROPERTIES }} | base64 --decode > key.properties

      - if: matrix.platform == 'Android'
        name: Install Android dependencies
        run: |
          rustup target add aarch64-linux-android armv7-linux-androideabi x86_64-linux-android
          cargo install cargo-ndk

      - if: matrix.platform == 'Linux'
        name: Install Linux dependencies
        run: sudo apt-get install -y ninja-build libgtk-3-dev

      - if: matrix.platform == 'Web'
        name: Install Web dependencies
        run: |
          rustup toolchain install nightly
          rustup +nightly component add rust-src
          rustup +nightly target add wasm32-unknown-unknown
          cargo install wasm-pack

      - name: Generate code
        run: flutter_rust_bridge_codegen --rust-input native/src/api.rs --dart-output ./lib/bridge_generated.dart --dart-decl-output ./lib/bridge_definitions.dart --wasm

      - name: Build
        run: ${{ matrix.command }}

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.platform }}
          path: ${{ matrix.output }}

      - if: matrix.platform == 'Web'
        name: Upload Web artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: ${{ matrix.output }}

      - if: matrix.platform == 'Web'
        name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1