name: Build

on:
  pull_request:
  push:
    branches:
      - main

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: Android
            os: ubuntu-latest
            command: flutter build apk --split-per-abi
            output: build/app/outputs/flutter-apk/*
          - platform: Linux
            os: ubuntu-latest
            command: flutter build linux
            output: build/linux/x64/release/bundle/*
          - platform: Windows
            os: windows-latest
            command: flutter build windows
            output: build/windows/x64/release/bundle/*
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3

      - name: Flutter cache
        uses: actions/cache@v2

      - name: Rust cache
        uses: Swatinem/rust-cache@v2
        with:
          path: |
            ~/.pub-cache
            ~/.dart_tool
            ~/.flutter
          key: ${{ runner.os }}-flutter-${{ hashFiles('**/pubspec.lock') }}
          restore-keys: |
            ${{ runner.os }}-flutter-

      - if: matrix.platform == 'Android'
        name: Android cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            ~/.android/build-cache
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Setup Flutter
        uses: subosito/flutter-action@v1
        with:
          channel: stable

      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Install dependencies
        run: |
          flutter pub get
          cargo install flutter_rust_bridge_codegen

      - if: matrix.platform == 'Android'
        name: Setup JDK
        uses: actions/setup-java@v2
        with:
          java-version: 17
          distribution: adopt

      - if: matrix.platform == 'Android'
        name: Setup Android SDK
        uses: android-actions/setup-android@v2

      - if: matrix.platform == 'Android'
        name: Add Rust targets for Android
        run: rustup target add aarch64-linux-android armv7-linux-androideabi x86_64-linux-android i686-linux-android

      - if: matrix.platform == 'Android'
        name: Configure Android Signing
        run: |
          cd android
          echo ${{ secrets.KEY }} | base64 --decode > key.jks
          echo ${{ secrets.PROPERTIES }} | base64 --decode > key.properties

      - if: matrix.platform == 'Android'
        name: Install Android dependencies
        run: cargo install cargo-ndk

      - if: matrix.platform == 'Linux'
        name: Install Linux dependencies
        run: sudo apt-get install -y ninja-build libgtk-3-dev

      - name: Generate code
        run: flutter_rust_bridge_codegen --rust-input native/src/api.rs --dart-output ./lib/bridge_generated.dart --dart-decl-output ./lib/bridge_definitions.dart

      - name: Build
        run: ${{ matrix.command }}

      - name: Tree
        shell: bash
        run: tree

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.platform }}
          path: ${{ matrix.output }}